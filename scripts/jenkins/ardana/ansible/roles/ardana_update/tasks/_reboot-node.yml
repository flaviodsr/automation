#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
# Accounting for the update scenario which starts from a point
# where the update helper playbooks are not yet present (i.e.
# have not yet been installed via ardana-ansible package updates).
- name: Check that the update helper playbooks have been installed
  stat:
    path: "{{ ardana_scratch_path }}/ardana-reboot.yml"
  register: _helper_playbooks_stat_result

- name: Fail if the update helper playbooks have not yet been installed
  fail:
    msg: |
      The update helper playbooks (e.g. ardana-reboot.yml) have not
      been installed on the deployer. These playbooks are required to
      continue testing the reboot workflow.
  when: not _helper_playbooks_stat_result.stat.exists | bool

- name: Reboot node {{ target_node }}
  shell: |
    ansible-playbook -i hosts/verb_hosts ardana-reboot.yml \
      --limit {{ target_node }}
  args:
    chdir: "{{ ardana_scratch_path }}"
  register: _deployer_reboot_result
  failed_when: _deployer_reboot_result.rc != 0 and
               not (node_is_deployer and
               'The deployer node needs to be rebooted manually.' in _deployer_reboot_result.stdout)

- name: Reboot deployer
  shell: sleep 2 && shutdown -r now "Ardana updates triggered"
  async: 1
  poll: 0
  failed_when: false
  become: yes
  when: node_is_deployer

- name: Wait for node after reboot
  wait_for_connection:
    delay: 5
  when: node_is_deployer

# Workaround for bsc#1091226: SometimesÂ¸if the deployer is also a controller
# node, there are problems mounting the NFS zypper repositories during boot,
# probably because there is a race condition with the neutron-openvswitch-agent
# service or the Neutron OVS Cleanup Service, which temporarily disrupts
# connectivity. Remounting repositories fixes that.
- name: Remount zypper repositories on deployer
  command: mount --all
  args:
    warn: no
  become: true
  when: node_is_deployer

- name: Run post-reboot actions on deployer
  shell: |
    ansible-playbook -i hosts/verb_hosts _ardana-post-reboot.yml \
      --limit {{ target_node }}
  args:
    chdir: "{{ ardana_scratch_path }}"
  when: node_is_deployer

- name: Ensure spark running on all nodes (bsc#1091479)
  shell: |
    ansible-playbook -i hosts/verb_hosts spark-start.yml
  args:
    chdir: "{{ ardana_scratch_path }}"
