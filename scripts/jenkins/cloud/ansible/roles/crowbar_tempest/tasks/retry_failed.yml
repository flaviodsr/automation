#
# (c) Copyright 2019 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: Get blacklisted tests
  shell: |
    grep -h ^- {{ tempest_run_filter }}.txt
  args:
    chdir: "{{ tempest_work_dir }}/run_filters"
  register: _filter_blacklist
  failed_when: false

- name: Generate filter with failed tests
  template:
    src: "run_filter_retry.txt.j2"
    dest: "{{ tempest_work_dir }}/run_filters/{{ tempest_run_filter }}_retry.txt"
    mode: 0644
  become: yes

- name: Save previous tempest run outputs
  copy:
    src: "{{ item }}"
    dest: "{{ item }}.previous"
    remote_src: True
  loop:
    - "{{ tempest_results_log }}"
    - "{{ tempest_results_subunit }}"

- name: Rerun failed tests
  shell: |
    set -o pipefail
    filter_regex=$(bin/tests2skip.py run_filters/{{ tempest_run_filter }}_retry.txt)
    tempest run --serial -r $filter_regex | tee {{ tempest_results_log }}
  args:
    chdir: "{{ tempest_work_dir }}"
  changed_when: false
  failed_when: false

- name: Generate subunit output
  shell: |
    testdriver=testr
    [ -f ".stestr.conf" ] && testdriver=stestr
    $testdriver last --subunit > {{ tempest_results_subunit }}
  register: _subunit_result
  args:
    chdir: "{{ tempest_work_dir }}"
  changed_when: _subunit_result.rc == 0

- name: Combine test outputs
  shell: |
    subunit-filter -fs {{ tempest_results_subunit }}.previous >> {{ tempest_results_subunit }}
    cat {{ tempest_results_log }}.previous {{ tempest_results_log  }} > {{ tempest_results_log }}.tmp
    mv {{ tempest_results_log }}.tmp {{ tempest_results_log }}
  register: _combine_result
  args:
    chdir: "{{ tempest_work_dir }}/logs"
  changed_when: _combine_result.rc == 0
